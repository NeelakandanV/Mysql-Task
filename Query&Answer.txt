-- Retrieve all customers who have placed an order in the last 30 days. 
SELECT DISTINCT c.id,c.name,c.email,c.address FROM Customers c
JOIN Orders o ON c.id = o.customer_id
WHERE o.order_date >= CURDATE() - INTERVAL 30 DAY;



-- Get the total amount of all orders placed by each customer.
/*SELECT c.id, c.name, SUM(o.total_amount) AS spent FROM Customers c
JOIN Orders o ON c.id = o.customer_id
GROUP BY c.id, c.name;*/

-- Update the price of Product C to 45.00
/*UPDATE Products
SET price = 45
WHERE name = 'Product C';*/

-- Add a new column discount to the products table.
ALTER TABLE products
ADD COLUMN discount DECIMAL(5) DEFAULT 0;

-- Retrieve the top 3 products with the highest price.
SELECT * FROM Products
ORDER BY price DESC
LIMIT 3;

/*-- Get the names of customers who have ordered Product A.
SELECT DISTINCT c.name FROM Customers c
JOIN Orders o ON c.id = o.customer_id
JOIN Order_items oi ON o.id = oi.order_id
JOIN Products p ON oi.product_id = p.id
WHERE p.name = 'Product A';*/

/*-- Join the orders and customers tables to retrieve the customer's name and order date for each order. 
SELECT c.name, o.order_date
FROM customers c
JOIN orders o ON c.id = o.customer_id;*/

/*-- Retrieve the orders with a total amount greater than 150.00.
SELECT id, customer_id, order_date, total_amount FROM Orders
WHERE total_amount > 150.00;*/


/*CREATE TABLE Order_items (
    id INT AUTO_INCREMENT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT NOT NULL,
    FOREIGN KEY (order_id) REFERENCES orders(id),
    FOREIGN KEY (product_id) REFERENCES products(id)
);*/

-- Normalize the database by creating a separate table for order items and updating the orders table to reference the order_items table.
-- Insert data to Order Items
/*INSERT INTO Order_items (order_id, product_id, quantity) VALUES
(1, 1, 1),  
(1, 2, 2),  
(2, 3, 1), 
(3, 4, 1), 
(4, 5, 3),  
(5, 6, 1),  
(6, 7, 2),  
(7, 8, 1),  
(8, 9, 1), 
(9, 10, 2); */

-- Retrieve the average total of all orders.
/*SELECT AVG(total_amount) AS average_order FROM Orders;*/